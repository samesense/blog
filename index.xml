<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>blog</title>
    <link>https://samesense.github.io/blog/</link>
    <description>Recent content on blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 02 Aug 2020 11:59:19 -0400</lastBuildDate>
    
	<atom:link href="https://samesense.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Snakemake Modules</title>
      <link>https://samesense.github.io/blog/post/snakemake-modules/</link>
      <pubDate>Sun, 02 Aug 2020 11:59:19 -0400</pubDate>
      
      <guid>https://samesense.github.io/blog/post/snakemake-modules/</guid>
      <description>I want to reuse workflows across projects. I&amp;rsquo;ll try the following solution. Consider this snakemake workflow.
 The second task can be made dynamically at run time.
 Import rule_maker.py and make a rule in the snakefile.
 I tried using eval to avoid making a temporary snakefile, but that did not work. I let the user pick input and output paths, and provide a snakefile name as needed. This method allows you so create an entire workflow with rule_maker.</description>
    </item>
    
    <item>
      <title>future proofing bioinformatics</title>
      <link>https://samesense.github.io/blog/post/bioinformatics-tooling/</link>
      <pubDate>Mon, 12 Feb 2018 14:38:58 -0500</pubDate>
      
      <guid>https://samesense.github.io/blog/post/bioinformatics-tooling/</guid>
      <description>I spend a lot of time struggling with the instalation, documentation, use, and reuse of computational tools. Today I&amp;rsquo;ve put together a strategy that I hope will address all of the following issues I&amp;rsquo;ve had with tools:
issue ls *
Reusing tools with docker Managing tools with pyenv Ordering every analysis step with Snakemake Managing tools with anaconda Recording every analysis step with github  issues  Data management with Quilt (https://quiltdata.</description>
    </item>
    
    <item>
      <title>bioinformatics tooling</title>
      <link>https://samesense.github.io/blog/posts/bioinformatics-tooling/</link>
      <pubDate>Mon, 12 Feb 2018 14:37:23 -0500</pubDate>
      
      <guid>https://samesense.github.io/blog/posts/bioinformatics-tooling/</guid>
      <description></description>
    </item>
    
    <item>
      <title>bear notebook</title>
      <link>https://samesense.github.io/blog/post/bear/</link>
      <pubDate>Fri, 01 Sep 2017 15:05:07 -0400</pubDate>
      
      <guid>https://samesense.github.io/blog/post/bear/</guid>
      <description>This week I tried Ulysses and Bear as lab notebook options. I&amp;rsquo;ve decided to go with Bear, and pay its annual fee of $15.
I started my notebook in 2007 on blogger. I did not like the search features. I briefly switched to a locally hosted ghost, but found that searching through posts and updating ghost soured the experience. I&amp;rsquo;ve been using text files backed up to GitHub for the past two years.</description>
    </item>
    
    <item>
      <title>my python project structure template</title>
      <link>https://samesense.github.io/blog/post/cookiecutter/</link>
      <pubDate>Sun, 25 Jun 2017 10:08:24 -0400</pubDate>
      
      <guid>https://samesense.github.io/blog/post/cookiecutter/</guid>
      <description>Cookiecutter allows you to setup a project&amp;rsquo;s structure from templates. I use a modified data science cookiecutter template. My version is here. The benefits of a project template are better described by others. I use one for consistent navigation across projects, and to save configuration time.
My modifications to the data science template are below.
 I add a work directory to hold analysis results and summaries that do not belong in reports.</description>
    </item>
    
  </channel>
</rss>